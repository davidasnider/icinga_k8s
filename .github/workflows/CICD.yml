name: Test Build Merge Deploy

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build-name:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Branch name
        run: echo running on branch ${{ github.event.pull_request.head.ref }}

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - uses: pre-commit/action@v2.0.0

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      # Gitleaks check for secrets
      - name: Gitleaks
        uses: zricethezav/gitleaks-action@v1.1.4

  build-icinga-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Set version tags
        id: build-prep
        run: |
          VERSION=noop
          DOCKER_IMAGE=ghcr.io/davidasnider/icinga_k8s/icinga-server
          if [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=v1.0.${{ github.event.number }}
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker/icinga-server
          file: ./docker/icinga-server/Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: ${{ steps.build-prep.outputs.tags }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-icinga-server

    steps:
      - name: Set version tags
        id: build-prep
        run: |
          DOCKER_IMAGE=ghcr.io/davidasnider/icinga_k8s/icinga-server
          VERSION=noop
          if [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION="v1.0.${{ github.event.number }}"
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update kubernetes resources
        run: |
          cd k8s/prod
          kustomize edit set image ${{ steps.build-prep.outputs.tags }}
          # Temp workaround for bases and resources
          sed -i 's/^resources:$/bases:/g' kustomization.yaml
          cat kustomization.yaml

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Bump docker tag"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.pull_request.head.ref }}

  pr-approve:
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      - gitleaks
      - build-icinga-server
      - deploy
    steps:
      - uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  label-pr:
    runs-on: ubuntu-latest
    needs:
      - pr-approve
    steps:
      - uses: christianvuerings/add-labels@v1.1
        with:
          labels: |
            automerge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  automerge:
    runs-on: ubuntu-latest
    needs:
      - label-pr
    steps:
      - name: automerge
        uses: "pascalgn/automerge-action@v0.12.0"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
