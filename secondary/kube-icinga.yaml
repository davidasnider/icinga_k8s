---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-icinga
subjects:
- kind: ServiceAccount
  name: kube-icinga
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kube-icinga
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kube-icinga
  labels:
    k8s-app: kube-icinga
rules:
- apiGroups:
  - ""
  - extensions
  - apps
  resources:
  - namespaces
  - ingresses
  - services
  - nodes
  - pods
  - deployments
  - persistentvolumes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  - ""
  resources:
  - ingresses
  - ingresses/status
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-icinga
  namespace: kube-system
  labels:
    k8s-app: kube-icinga
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-icinga
  name: kube-icinga
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kube-icinga
  template:
    metadata:
      labels:
        k8s-app: kube-icinga
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      initContainers:
      - name: init-icinga-server
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -zv -w 1 icinga-server 5665; do echo waiting for icinga-server; sleep 2; done;']
      containers:
      - image: gyselroth/kube-icinga:2.1.0-alpha3
        imagePullPolicy: Always
        name: kube-icinga
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: ICINGA_ADDRESS
          value: icinga-sec.thesniderpad.com
        - name: KUBERNETES_VOLUMES_HOSTNAME
          value: k8s2
        - name: KUBERNETES_SERVICES_LOADBALANCER_HOSTNAME
          value: k8s2
        - name: ICINGA_API_USERNAME
          valueFrom:
            secretKeyRef:
              name: icinga-credentials
              key: username
        - name: ICINGA_API_PASSWORD
          valueFrom:
            secretKeyRef:
              name: icinga-credentials
              key: password
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kube-icinga
      serviceAccountName: kube-icinga
      terminationGracePeriodSeconds: 30
